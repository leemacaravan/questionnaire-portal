<!-- Softr HTML Block (3-line clamp + clean links + utilities pills + preferred order) -->
<div class="container">
  <div class="outer-card">
    <div class="page-title">Basic building information</div>
    <div class="subtitle">Essential building information available at no charge. This includes fees, policies, and application documents.</div>

    <!-- Print icon in top right of Basic building information card -->
    <button class="print-icon" onclick="window.print()" aria-label="Print">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_672_8096)">
          <path d="M6 19H3C2.73478 19 2.48043 18.8946 2.29289 18.7071C2.10536 18.5196 2 18.2652 2 18V8C2 7.73478 2.10536 7.48043 2.29289 7.29289C2.48043 7.10536 2.73478 7 3 7H6V3C6 2.73478 6.10536 2.48043 6.29289 2.29289C6.48043 2.10536 6.73478 2 7 2H17C17.2652 2 17.5196 2.10536 17.7071 2.29289C17.8946 2.48043 18 2.73478 18 3V7H21C21.2652 7 21.5196 7.10536 21.7071 7.29289C21.8946 7.48043 22 7.73478 22 8V18C22 18.2652 21.8946 18.5196 21.7071 18.7071C21.5196 18.8946 21.2652 19 21 19H18V21C18 21.2652 17.8946 21.5196 17.7071 21.7071C17.5196 21.8946 17.2652 22 17 22H7C6.73478 22 6.48043 21.8946 6.29289 21.7071C6.10536 21.5196 6 21.2652 6 21V19ZM6 17V16C6 15.7348 6.10536 15.4804 6.29289 15.2929C6.48043 15.1054 6.73478 15 7 15H17C17.2652 15 17.5196 15.1054 17.7071 15.2929C17.8946 15.4804 18 15.7348 18 16V17H20V9H4V17H6ZM8 4V7H16V4H8ZM8 17V20H16V17H8ZM5 10H8V12H5V10Z" fill="#1A1A1A"/>
        </g>
        <defs>
          <clipPath id="clip0_672_8096">
            <rect width="24" height="24" fill="white"/>
          </clipPath>
        </defs>
      </svg>
    </button>

    <!-- Section: Fees -->
    <div class="section">
      <button class="section-head" type="button" data-target="#fees-section">
        <div class="head-left">
          <span class="head-icon">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <g clip-path="url(#clip0_672_11252)">
                <path d="M3 3H21C21.2652 3 21.5196 3.10536 21.7071 3.29289C21.8946 3.48043 22 3.73478 22 4V20C22 20.2652 21.8946 20.5196 21.7071 20.7071C21.5196 20.8946 21.2652 21 21 21H3C2.73478 21 2.48043 20.8946 2.29289 20.7071C2.10536 20.5196 2 20.2652 2 20V4C2 3.73478 2.10536 3.48043 2.29289 3.29289C2.48043 3.10536 2.73478 3 3 3ZM20 11H4V19H20V11ZM20 9V5H4V9H20ZM14 15H18V17H14V15Z" fill="currentColor"/>
              </g>
              <defs>
                <clipPath id="clip0_672_11252">
                  <rect width="24" height="24" fill="white"/>
                </clipPath>
              </defs>
            </svg>
          </span>
          <div>
            <div class="head-title">Building Fees</div>
            <div class="head-caption">Move in/out fees, deposits, application fees</div>
          </div>
        </div>
        <span class="chevron" aria-hidden="true">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_672_14492)">
              <path d="M12 13.1719L16.95 8.22192L18.364 9.63592L12 15.9999L5.63599 9.63592L7.04999 8.22192L12 13.1719Z" fill="currentColor"/>
            </g>
            <defs>
              <clipPath id="clip0_672_14492">
                <rect width="24" height="24" fill="white"/>
              </clipPath>
            </defs>
          </svg>
        </span>      </button>
      <div class="section-body" id="fees-section">Loading fees...</div>
    </div>

    <!-- Section: Fee Policies -->
    <div class="section">
      <button class="section-head" type="button" data-target="#fee-policies-section">
        <div class="head-left">
          <span class="head-icon">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <g clip-path="url(#clip0_672_10392)">
                <path d="M21 8V20.993C21.0009 21.1243 20.976 21.2545 20.9266 21.3762C20.8772 21.4979 20.8043 21.6087 20.7121 21.7022C20.6199 21.7957 20.5101 21.8701 20.3892 21.9212C20.2682 21.9723 20.1383 21.9991 20.007 22H3.993C3.72981 22 3.47739 21.8955 3.2912 21.7095C3.105 21.5235 3.00027 21.2712 3 21.008V2.992C3 2.455 3.449 2 4.002 2H14.997L21 8ZM19 9H14V4H5V20H19V9ZM8 7H11V9H8V7ZM8 11H16V13H8V11ZM8 15H16V17H8V15Z" fill="currentColor"/>
              </g>
              <defs>
                <clipPath id="clip0_672_10392">
                  <rect width="24" height="24" fill="white"/>
                </clipPath>
              </defs>
            </svg>
          </span>
          <div>
            <div class="head-title">Building Fee Policies</div>
            <div class="head-caption">Flip tax, sublet fee, capital contribution</div>
          </div>
        </div>
        <span class="chevron" aria-hidden="true">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_672_14492)">
              <path d="M12 13.1719L16.95 8.22192L18.364 9.63592L12 15.9999L5.63599 9.63592L7.04999 8.22192L12 13.1719Z" fill="currentColor"/>
            </g>
            <defs>
              <clipPath id="clip0_672_14492">
                <rect width="24" height="24" fill="white"/>
              </clipPath>
            </defs>
          </svg>
        </span>      </button>
      <div class="section-body" id="fee-policies-section">Loading fee policies...</div>
    </div>

    <!-- Section: Building Policies -->
    <div class="section">
      <button class="section-head" type="button" data-target="#building-policies-section">
        <div class="head-left">
          <span class="head-icon">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <g clip-path="url(#clip0_672_8256)">
                <path d="M22 21H2V19H3V4C3 3.73478 3.10536 3.48043 3.29289 3.29289C3.48043 3.10536 3.73478 3 4 3H18C18.2652 3 18.5196 3.10536 18.7071 3.29289C18.8946 3.48043 19 3.73478 19 4V9H21V19H22V21ZM17 19H19V11H13V19H15V13H17V19ZM17 9V5H5V19H11V9H17ZM7 11H9V13H7V11ZM7 15H9V17H7V15ZM7 7H9V9H7V7Z" fill="currentColor"/>
              </g>
              <defs>
                <clipPath id="clip0_672_8256">
                  <rect width="24" height="24" fill="white"/>
                </clipPath>
              </defs>
            </svg>
          </span>
          <div>
            <div class="head-title">Building Policies</div>
            <div class="head-caption">House rules, leasing, ownership allowances</div>
          </div>
        </div>
        <span class="chevron" aria-hidden="true">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_672_14492)">
              <path d="M12 13.1719L16.95 8.22192L18.364 9.63592L12 15.9999L5.63599 9.63592L7.04999 8.22192L12 13.1719Z" fill="currentColor"/>
            </g>
            <defs>
              <clipPath id="clip0_672_14492">
                <rect width="24" height="24" fill="white"/>
              </clipPath>
            </defs>
          </svg>
        </span>      </button>
      <div class="section-body" id="building-policies-section">Loading policies...</div>
    </div>
    
    <!-- Section: Application Documents -->
    <div class="section application-docs">
      <button class="section-head" type="button" data-target="#application-documents-section">
        <div class="head-left">
          <span class="head-icon">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <g clip-path="url(#clip0_672_4242)">
                <path d="M4 2C3.73478 2 3.48043 2.10536 3.29289 2.29289C3.10536 2.48043 3 2.73478 3 3V21C3 21.2652 3.10536 21.5196 3.29289 21.7071C3.48043 21.8946 3.73478 22 4 22H20C20.2652 22 20.5196 21.8946 20.7071 21.7071C20.8946 21.5196 21 21.2652 21 21V8L15 2H4ZM14 3.5L19.5 9H14V3.5ZM7 11H17V13H7V11ZM7 15H17V17H7V15Z" fill="currentColor"/>
              </g>
              <defs>
                <clipPath id="clip0_672_4242">
                  <rect width="24" height="24" fill="white"/>
                </clipPath>
              </defs>
            </svg>
          </span>
          <div>
            <div class="head-title">Application Documents</div>
            <div class="head-caption">Forms and submission info</div>
          </div>
        </div>
        <span class="chevron" aria-hidden="true">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_672_14492)">
              <path d="M12 13.1719L16.95 8.22192L18.364 9.63592L12 15.9999L5.63599 9.63592L7.04999 8.22192L12 13.1719Z" fill="currentColor"/>
            </g>
            <defs>
              <clipPath id="clip0_672_14492">
                <rect width="24" height="24" fill="white"/>
              </clipPath>
            </defs>
          </svg>
        </span>      </button>
      <div class="section-body" id="application-documents-section">Loading application documents...</div>
    </div>
  </div>
  

  <!-- NEW: Upsell container (shown when recordId present, transactionId missing) -->
  <div class="outer-card upsell-card" id="upsell-card" hidden>
    <div class="offer-grid">
      <div class="offer">
        <div class="offer-title">Need more details?</div>
        <div class="offer-desc">Get unit-specific information and detailed building data with our standard questionnaire.</div>
        <a class="btn btn-blue" id="btn-standard" href="#" role="button">Get standard questionnaire — $150</a>
      </div>
      <div class="offer">
        <div class="offer-title">Need something custom?</div>
        <div class="offer-desc">Get personalized responses in your preferred format with expert follow-ups.</div>
        <a class="btn btn-indigo" id="btn-custom" href="#" role="button">Get custom questionnaire — $450</a>
      </div>
    </div>
  </div>

  <!-- Detailed unit and building information (styled like basic card; visible when recordId & transactionId present) -->
  <div class="outer-card detailed-card" id="detailed-card" hidden>
    <div class="page-title">Detailed unit and building information</div>
    <div class="subtitle">Unlock comprehensive unit-specific and building data to speed up your application</div>
    <div class="paid-badge" aria-label="Paid access - $150" title="Paid access - $150">
      <span class="paid-icon">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <g clip-path="url(#clip0_paid_11296)">
            <path d="M17 16H19V4H9V6H17V16ZM17 18V21C17 21.552 16.55 22 15.993 22H4.007C3.87513 22.0008 3.7444 21.9755 3.62232 21.9256C3.50025 21.8757 3.38923 21.8022 3.29566 21.7093C3.20208 21.6164 3.12779 21.5059 3.07705 21.3841C3.02632 21.2624 3.00013 21.1319 3 21L3.003 7C3.003 6.448 3.453 6 4.01 6H7V3C7 2.73478 7.10536 2.48043 7.29289 2.29289C7.48043 2.10536 7.73478 2 8 2H20C20.2652 2 20.5196 2.10536 20.7071 2.29289C20.8946 2.48043 21 2.73478 21 3V17C21 17.2652 20.8946 17.5196 20.7071 17.7071C20.5196 17.8946 20.2652 18 20 18H17ZM5.003 8L5 20H15V8H5.003ZM7 16H11.5C11.6326 16 11.7598 15.9473 11.8536 15.8536C11.9473 15.7598 12 15.6326 12 15.5C12 15.3674 11.9473 15.2402 11.8536 15.1464C11.7598 15.0527 11.6326 15 11.5 15H8.5C7.83696 15 7.20107 14.7366 6.73223 14.2678C6.26339 13.7989 6 13.163 6 12.5C6 11.837 6.26339 11.2011 6.73223 10.7322C7.20107 10.2634 7.83696 10 8.5 10H9V9H11V10H13V12H8.5C8.36739 12 8.24021 12.0527 8.14645 12.1464C8.05268 12.2402 8 12.3674 8 12.5C8 12.6326 8.05268 12.7598 8.14645 12.8536C8.24021 12.9473 8.36739 13 8.5 13H11.5C12.163 13 12.7989 13.2634 13.2678 13.7322C13.7366 14.2011 14 14.837 14 15.5C14 16.163 13.7366 16.7989 13.2678 17.2678C12.7989 17.7366 12.163 18 11.5 18H11V19H9V18H7V16Z" fill="currentColor"/>
          </g>
          <defs>
            <clipPath id="clip0_paid_11296">
              <rect width="24" height="24" fill="white"/>
            </clipPath>
          </defs>
        </svg>
      </span>
      <span class="paid-text">$150</span>
    </div>

    <!-- Section: Unit Specific Information -->
    <div class="section">
      <button class="section-head" type="button" data-target="#unit-specific-info-section">
        <div class="head-left">
          <span class="head-icon">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <g clip-path="url(#clip0_unit_info)">
                <path d="M12 3L2 12H5V21H10V15H14V21H19V12H22L12 3Z" fill="currentColor"/>
              </g>
              <defs>
                <clipPath id="clip0_unit_info">
                  <rect width="24" height="24" fill="white"/>
                </clipPath>
              </defs>
            </svg>
          </span>
          <div>
            <div class="head-title">Unit Specific Information</div>
            <div class="head-caption">Common charges, assessments, shares</div>
          </div>
        </div>
        <span class="chevron" aria-hidden="true">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_672_14492)">
              <path d="M12 13.1719L16.95 8.22192L18.364 9.63592L12 15.9999L5.63599 9.63592L7.04999 8.22192L12 13.1719Z" fill="currentColor"/>
            </g>
            <defs>
              <clipPath id="clip0_672_14492">
                <rect width="24" height="24" fill="white"/>
              </clipPath>
            </defs>
          </svg>
        </span>      </button>
      <div class="section-body" id="unit-specific-info-section">
        <div class="data-row"><span class="label">Monthly Common Charges</span><div class="value"><span class="hidden-pill">Hidden</span></div></div>
        <div class="data-row"><span class="label">Current Assessments</span><div class="value"><span class="hidden-pill">Hidden</span></div></div>
        <div class="data-row"><span class="label">Number of Shares</span><div class="value"><span class="hidden-pill">Hidden</span></div></div>
        <div class="data-row"><span class="label">Property Taxes</span><div class="value"><span class="hidden-pill">Hidden</span></div></div>
        <div class="data-row"><span class="label">Maintenance History</span><div class="value"><span class="hidden-pill">Hidden</span></div></div>
      </div>
    </div>

    <!-- Section: Building Information -->
    <div class="section">
      <button class="section-head" type="button" data-target="#building-info-section">
        <div class="head-left">
          <span class="head-icon">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <g clip-path="url(#clip0_bldg_info)">
                <path d="M3 21V3H13V7H21V21H3ZM11 19H13V17H11V19ZM7 19H9V17H7V19ZM11 15H13V13H11V15ZM7 15H9V13H7V15ZM11 11H13V9H11V11ZM7 11H9V9H7V11ZM15 19H19V9H15V19Z" fill="currentColor"/>
              </g>
              <defs>
                <clipPath id="clip0_bldg_info">
                  <rect width="24" height="24" fill="white"/>
                </clipPath>
              </defs>
            </svg>
          </span>
          <div>
            <div class="head-title">Building Information</div>
            <div class="head-caption">Floors, units, occupancy details</div>
          </div>
        </div>
        <span class="chevron" aria-hidden="true">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_672_14492)">
              <path d="M12 13.1719L16.95 8.22192L18.364 9.63592L12 15.9999L5.63599 9.63592L7.04999 8.22192L12 13.1719Z" fill="currentColor"/>
            </g>
            <defs>
              <clipPath id="clip0_672_14492">
                <rect width="24" height="24" fill="white"/>
              </clipPath>
            </defs>
          </svg>
        </span>
    </button>
      <div class="section-body" id="building-info-section">
        <div class="data-row"><span class="label">Total Floors</span><div class="value"><span class="hidden-pill">Hidden</span></div></div>
        <div class="data-row"><span class="label">Total Units</span><div class="value"><span class="hidden-pill">Hidden</span></div></div>
        <div class="data-row"><span class="label">Rental Units</span><div class="value"><span class="hidden-pill">Hidden</span></div></div>
        <div class="data-row"><span class="label">Pied-à-terre Units</span><div class="value"><span class="hidden-pill">Hidden</span></div></div>
        <div class="data-row"><span class="label">Owner Occupied</span><div class="value"><span class="hidden-pill">Hidden</span></div></div>
      </div>
    </div>

    <!-- Footer purchase bar -->
    <div class="purchase-cta purchase-cta--detail">
      <button class="purchase-cta-btn purchase-cta-btn--sm" id="btn-standard" type="button">
        <span class="btn-label">Purchase here</span>
        <span class="btn-price" aria-hidden="true">$150</span>
        <span class="btn-arrow" aria-hidden="true">
          <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_672_14440)">
              <path d="M16.172 10.9999L10.808 5.63592L12.222 4.22192L20 11.9999L12.222 19.7779L10.808 18.3639L16.172 12.9999H4V10.9999H16.172Z" fill="#1A1A1A"/>
            </g>
            <defs>
              <clipPath id="clip0_672_14440">
                <rect width="24" height="24" fill="white"/>
              </clipPath>
            </defs>
          </svg>
        </span>
      </button>
    </div>
  </div>
</div>

<style>
    
  :root{ 
    --border:#e5e7eb; 
    --bg:#f8fafc; 
    --fg:#1f2937; 
    --muted:#6b7280; 
    --brand:#006956; 
    --row-bg:#ffffff; 
    /* Daisy Brand Colors */
    --daisy-deep:#08494B;
    --daisy-green:#006956;
    --daisy-grass:#4C9D8D;
    --daisy-mint:#D3FFF3;
    --daisy-off:#FFFDF4;
    /* NEW: secondary palette for CTAs per guidelines */
    --daisy-blue:#4255FF;    /* Daisy Blue */
    --daisy-midnight:#1F2870;/* Midnight (deep indigo) */
  }
  body{ background:var(--bg); }
  .container{ max-width:960px; margin:auto; font-family:Inter,system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif; padding:40px 20px; color:var(--fg);} 
  .outer-card{ background:#fff; border:1px solid var(--border); padding:28px; box-shadow:0 4px 10px rgba(0,0,0,.04); border-radius:4px; position:relative; }
  .page-title{ font-size:28px; font-weight:800; text-align:center; margin:6px 0; color:var(--fg);}
  .subtitle{ text-align:center; color:var(--muted); font-size:14px; margin-bottom:22px;}
  .paid-badge{ display:inline-flex; align-items:center; gap:6px; background:#E8F1FF; color:#1D4ED8; border:1px solid #BFDBFE; border-radius:9999px; padding:4px 8px; font-weight:800; font-size:12px; margin:8px auto 0; }
  .paid-icon{ display:inline-flex; align-items:center; justify-content:center; color:#1D4ED8; }
  .paid-text{ line-height:1; }
  
  /* Rate limit message styling */
  .rate-limit-message { background:#fef3c7; border:1px solid #f59e0b; border-radius:4px; padding:12px 16px; margin:16px 0; text-align:center; }
  .rate-limit-message .message-content { color:#92400e; font-size:14px; display:flex; align-items:center; justify-content:center; gap:8px; }
  .rate-limit-message span { font-size:16px; }

  /* Info card - subtle Daisy accent */
  .info-card{ background:linear-gradient(135deg,#f8fafc 0%,#f1f5f9 100%); border:1px solid var(--daisy-green); border-radius:4px; padding:16px 18px; margin-bottom:20px; color:var(--fg); }
  .card-title{ font-weight:700; font-size:16px; color:var(--daisy-deep); }
  .card-subtitle{ font-size:13px; color:var(--muted); margin-top:2px; }
  .info-card::after{ content:""; display:block; height:3px; margin-top:10px; border-radius:1px; background:linear-gradient(90deg,var(--daisy-green),var(--daisy-grass)); }

  .section{ border:1px solid var(--border); border-radius:4px; margin:16px 0; overflow:hidden; background:#fff;}
  .section + .section{ margin-top:18px; }
  .section-head{ width:100%; display:flex; align-items:center; justify-content:space-between; background:#f8fafc; border:0; padding:14px 16px; cursor:pointer; font:inherit; text-align:left; color:var(--fg); }
  .section-head:hover{ background:#f1f5f9; }
  .head-left{ display:flex; gap:12px; align-items:center;}
  /* Default (Basic card) icons: Daisy green */
  .head-icon{ width:28px; height:28px; display:inline-grid; place-items:center; background:var(--daisy-green); color:#fff; border-radius:4px; font-weight:400; }
  /* Paid (Detailed card) icons: Sky blue */
  .detailed-card .head-icon{ background:#C5E9FF; color:#1A1A1A; border:1px solid #9ED6FF; }
  .head-icon svg{ width:20px; height:20px; }
  .head-title{ font-weight:400; font-size:16px; }
  .head-caption{ font-size:12px; color:var(--muted); margin-top:2px; letter-spacing:0.05em; }
  .chevron{ display:inline-flex; align-items:center; justify-content:center; width:24px; height:24px; transition:transform .25s ease; color:var(--muted); }
  .chevron svg{ width:24px; height:24px; display:block; }
  .section.open .chevron{ transform: rotate(-180deg); }

  .section-body{ display:none; padding:14px; background:#fff; }
  .section.open .section-body{ display:block; }

  .section-body h4{ font-size:12px; letter-spacing:.05em; color:var(--muted); margin:14px 4px 8px; font-weight:400; }

  .data-row{ display:flex; align-items:center; justify-content:space-between; gap:16px; padding:14px 16px; background:var(--row-bg); border:1px solid var(--border); border-radius:4px; margin:8px 0; }
  .label{ font-weight:400; flex:0 0 280px; color:var(--muted); font-size:12px; letter-spacing:0.05em; display:flex; align-items:center; }
  .value{ font-weight:400; color:var(--fg); white-space:normal; word-break:break-word; display:flex; flex-direction:column; align-items:flex-end; justify-content:center; gap:6px; width:100%; max-width:400px; }
  .value a{ color:var(--daisy-blue); text-decoration:none; }
  .value a:hover{ text-decoration:underline; }
  .data-row:hover{ background:#f8fafc; }
  
  /* Building Policies typography tweaks: unify sizes, soften answers */
  /* Unify text size and soften dynamic values across all sections */
  #building-policies-section .label,
  #application-documents-section .label,
  #fee-policies-section .label,
  #fees-section .label{ font-size:13px; }
  #building-policies-section .value,
  #application-documents-section .value,
  #fee-policies-section .value,
  #fees-section .value{ font-size:13px; color:#374151; }

  /* CHIP/TAG styles for Utilities and HVAC */
  .pills{ display:flex; flex-wrap:wrap; gap:6px; justify-content:flex-end; }
  .pill{ display:inline-flex; align-items:center; padding:4px 8px; border-radius:4px; font-size:12px; line-height:1; font-weight:700; border:1px solid var(--border); background:#f8fafc; color:var(--fg); }
  .pill:nth-child(7n+1){ background:#e8f5e8; border-color:#9be6a3; color:#166534; }
  .pill:nth-child(7n+2){ background:#f0f9ff; border-color:#7dd3fc; color:#0369a1; }
  .pill:nth-child(7n+3){ background:#fef3c7; border-color:#fcd34d; color:#92400e; }
  .pill:nth-child(7n+4){ background:#fce7f3; border-color:#f9a8d4; color:#be185d; }
  .pill:nth-child(7n+5){ background:#f3e8ff; border-color:#c4b5fd; color:#7c3aed; }
  .pill:nth-child(7n+6){ background:#ecfdf5; border-color:#86efac; color:#166534; }
  .pill:nth-child(7n+7){ background:#fff7ed; border-color:#fed7aa; color:#ea580c; }
  
  /* File/Link chip style */
  .stack-links{ display:flex; flex-wrap:wrap; gap:6px; justify-content:flex-end; align-items:center; }
  a.file-link{ display:inline-flex; align-items:center; gap:6px; padding:4px 8px; border-radius:6px; background:#EEF4FF; border:1px solid #C7D2FE; color:#2563EB; text-decoration:none; font-weight:400; font-size:12px; line-height:1; }
  a.file-link:hover{ background:#E6EEFF; border-color:#B7C8FF; color:#1D4ED8; text-decoration:underline; }
  a.file-link svg{ width:16px; height:16px; display:block; }

  /* NEW: Upsell offers */
  .upsell-card{ margin-top:24px; }
  .offer-grid{ display:grid; grid-template-columns:1fr; gap:18px; }
  @media (min-width:720px){ .offer-grid{ grid-template-columns:1fr 1fr; } }
  .offer{ border:1px solid var(--border); border-radius:4px; padding:18px; text-align:center; background:#fff; box-shadow:0 4px 10px rgba(0,0,0,.04); }
  .offer-title{ font-weight:800; font-size:18px; color:var(--fg); margin-bottom:6px; }
  .offer-desc{ color:var(--muted); font-size:13px; margin-bottom:12px; }
  .btn{ display:inline-block; padding:10px 14px; border-radius:4px; font-weight:700; text-decoration:none; color:#fff; border:1px solid transparent; }
  .btn-blue{ background:var(--daisy-blue); }
  .btn-indigo{ background:var(--daisy-midnight); }
  .btn:hover{ filter:brightness(.92); }

  /* Special styling for utilities and HVAC containers */
  .data-row.utility-hvac-row { background:var(--daisy-mint); border:1px solid var(--daisy-grass); border-radius:4px; }
  .data-row.utility-hvac-row:hover { background:var(--daisy-off); }
  .data-row.utility-hvac-row .label{ color:var(--daisy-deep); }
  .data-row.utility-hvac-row .value{ color:var(--daisy-deep); }

  /* Clamp */
  .value .clamp-wrap{ text-align:left; align-items:flex-start; }
  .value .clamp-text{ text-align:left; }
  .value:not(:has(.clamp-wrap)){ text-align:right; }
  .clamp-wrap{ max-width:100%; }
  .clamp-text{ display:-webkit-box; -webkit-line-clamp:3; -webkit-box-orient:vertical; overflow:hidden; transition:all .3s ease; max-height:4.5em; line-height:1.5em; }
  .clamp-wrap[data-expanded="true"] .clamp-text{ display:block; -webkit-line-clamp:unset; max-height:none; }
  .toggle{ margin-top:8px; padding:4px 10px; border:1px solid transparent; background:transparent; color:#6B7280; font:inherit; font-weight:800; cursor:pointer; border-radius:8px; font-size:14px; line-height:1; transition:background-color .15s ease, border-color .15s ease, color .15s ease, box-shadow .15s ease; display:inline-flex; align-items:center; justify-content:center; }
  .toggle:hover{ background:#d1d5db; border-color:#9ca3af; color:#111827; box-shadow:0 1px 2px rgba(0,0,0,0.08); }
  .toggle:focus{ outline:none; box-shadow:0 0 0 3px rgba(59,130,246,0.2); }
  .toggle{ display:none; }
  .clamp-wrap[data-overflow="true"] .toggle{ display:inline-block !important; }
  .clamp-wrap[data-expanded="true"] .toggle{ display:none !important; }

  /* Detailed card follows same styling as basic; only spacing needed */
  .detailed-card { margin-top: 32px; }
  .purchase-cta--detail{ margin-top:16px; display:flex; justify-content:center; }
  .purchase-cta-btn--sm{ 
    max-width:260px; 
    width:auto; 
    background:#85FF5B; 
    border-color:#6ee75a; 
    color:#1A1A1A; 
    font-weight:400; 
    font-family:"Basis Grotesque", Inter, system-ui, -apple-system, "Segoe UI", Roboto, Arial, sans-serif;
    font-size:14px;
    padding:10px 14px; 
    border-radius:9999px; 
    display:inline-flex; 
    align-items:center; 
    justify-content:center; 
    gap:8px; 
  }
  .purchase-cta-btn--sm:hover{ filter:brightness(.95); }
  .purchase-cta-btn--sm .btn-price{ opacity:0; width:0; margin-left:0; overflow:hidden; white-space:nowrap; transition:opacity .15s ease, width .15s ease, margin .15s ease; }
  .purchase-cta-btn--sm:hover .btn-price{ opacity:0.95; width:auto; margin-left:4px; }
  .purchase-cta-btn--sm .btn-arrow{ opacity:0; width:0; height:18px; margin-left:0; overflow:hidden; transition:opacity .15s ease, width .15s ease, margin .15s ease; display:inline-flex; align-items:center; }
  .purchase-cta-btn--sm:hover .btn-arrow{ opacity:1; width:18px; margin-left:6px; }

  /* Blurred hidden value pill */
  .hidden-pill{ 
    display:inline-block; padding:4px 10px; border-radius:12px; 
    background:linear-gradient(180deg,#f4f6f9,#eef2f7); 
    color:transparent; 
    font-weight:600; font-size:12px; position:relative; 
    filter:blur(3px); 
  }
  .hidden-pill::after{ 
    content:"Hidden"; color:#9aa5b1; position:absolute; inset:0; 
    display:flex; align-items:center; justify-content:center; 
    font-weight:600; text-shadow:0 0 8px rgba(154,165,177,0.6);
  }
  
  /* Print icon styling */
  .print-icon {
    position: absolute;
    top: 20px;
    right: 20px;
    background: none;
    border: none;
    padding: 8px;
    cursor: pointer;
    border-radius: 6px;
    transition: background-color 0.2s ease;
    z-index: 10;
  }
  
  .print-icon:hover {
    background-color: #f1f5f9;
  }
  
  .print-icon svg {
    width: 24px;
    height: 24px;
    display: block;
  }

  /* Print */
  @media print {
    .print-controls,.section-head,.toggle{ display:none !important; }
    .application-docs{ display:none !important; }
    .section-body{ display:block !important; }
    .toggle,button.toggle,.clamp-wrap .toggle,[class*="toggle"]{ display:none !important; visibility:hidden !important; opacity:0 !important; position:absolute !important; left:-9999px !important; }
    .clamp-wrap[data-expanded="false"] .clamp-text,.clamp-wrap .clamp-text{ display:block !important; -webkit-line-clamp:unset !important; max-height:none !important; overflow:visible !important; height:auto !important; -webkit-box-orient:unset !important; }
    .clamp-text{ display:block !important; -webkit-line-clamp:unset !important; max-height:none !important; overflow:visible !important; -webkit-box-orient:unset !important; height:auto !important; }
    .clamp-wrap[data-expanded="true"] .clamp-text,.clamp-wrap .clamp-text{ background:transparent !important; padding:0 !important; border-left:none !important; border:none !important; }
    .outer-card{ box-shadow:none !important; border:1px solid #ccc !important; }
    body{ background:#fff !important; color:#000 !important; }
    .outer-card{ background:#fff !important; }
    .section{ border:1px solid #ccc !important; background:#fff !important; margin:10px 0 !important; page-break-inside:avoid; }
    .section-head{ background:#f5f5f5 !important; color:#000 !important; }
    .data-row{ border:1px solid #ddd !important; background:#fff !important; page-break-inside:avoid; }
    .section:not(:last-child){ page-break-after:auto; }
    .page-title,.subtitle,.section-head{ page-break-after:avoid; }
     
</style>

<script>
(()=>{ 'use strict';

(function attachWhenSoftrReady(){
  const run = () => requestAnimationFrame(init);
  document.addEventListener('spr:rendered', run, { once:true });
  document.addEventListener('DOMContentLoaded', run, { once:true });
  setTimeout(()=>{ if(!window.__blkReady) run(); }, 300);
})();

function init(){
  if(window.__blkReady) return;
  const root = document.querySelector('.outer-card');
  if(!root){ requestAnimationFrame(init); return; }
  window.__blkReady = true;

  document.querySelectorAll('.section-head').forEach(btn=>{
    btn.addEventListener('click', ()=>{
      const section = btn.closest('.section');
      section.classList.toggle('open');
    });
  });
  document.querySelector('.section')?.classList.add('open');

  // NEW: decide what to show based on presence of recordId / transactionId / buildingId
  try {
    const qs = new URLSearchParams(window.location.search);
    const hasRecordId = !!(qs.get('recordId') || '').trim();
    const hasTxnId = !!(qs.get('transactionId') || '').trim();
    const hasBuildingId = !!(qs.get('buildingId') || '').trim();

    const detailedEl = document.getElementById('detailed-card');
    const upsellEl = document.getElementById('upsell-card');

    if (hasRecordId && !hasTxnId) {
      // Show upsell, hide detailed (and specifically hide if buildingId present, per requirement)
      upsellEl && upsellEl.removeAttribute('hidden');
      if (detailedEl) {
        if (detailedEl.parentNode) detailedEl.parentNode.removeChild(detailedEl);
        else detailedEl.setAttribute('hidden','');
      }
    } else if (hasRecordId && hasTxnId) {
      // Show detailed card
      detailedEl && detailedEl.removeAttribute('hidden');
      upsellEl && upsellEl.setAttribute('hidden','');
      // After paint, scroll directly to the purchase button and center it lower in viewport
      requestAnimationFrame(()=>{
        try {
          const target = detailedEl.querySelector('#btn-standard') || detailedEl.querySelector('.purchase-cta--detail') || detailedEl;
          const rect = target.getBoundingClientRect();
          const y = rect.top + window.pageYOffset - (window.innerHeight * 0.6 - rect.height/2);
          window.scrollTo({ top: y, behavior: 'smooth' });
        } catch {
          detailedEl && detailedEl.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
      });
    } else {
      // No recordId at all: remove detailed & upsell
      detailedEl && detailedEl.parentNode && detailedEl.parentNode.removeChild(detailedEl);
      upsellEl && upsellEl.parentNode && upsellEl.parentNode.removeChild(upsellEl);
    }
  } catch {}

  // Clamp toggle
  document.addEventListener('click', (e)=>{
    // Expand/collapse when clicking the ellipsis or anywhere in the value's clamp area
    const toggleBtn = e.target.closest('.toggle');
    const clampArea = e.target.closest('.clamp-wrap');
    if (!toggleBtn && !clampArea) return;
    const wrap = clampArea || toggleBtn.closest('.clamp-wrap');
    if (!wrap) return;
    const expanded = wrap.getAttribute('data-expanded') === 'true';
    wrap.setAttribute('data-expanded', String(!expanded));
    const btn = wrap.querySelector('.toggle');
    if (btn) {
      btn.textContent = expanded ? '…' : '…';
    btn.setAttribute('aria-expanded', String(!expanded));
    }
  });

  // Print behavior
  window.addEventListener('beforeprint', () => {
    document.querySelectorAll('.section').forEach(s => s.classList.add('open'));
    document.querySelectorAll('.clamp-wrap').forEach(w => w.setAttribute('data-expanded','true'));
    document.querySelectorAll('.toggle').forEach(t => {
      t.style.display='none'; t.style.visibility='hidden'; t.style.opacity='0'; t.style.position='absolute'; t.style.left='-9999px';
    });
  });
  window.addEventListener('afterprint', () => {
    document.querySelectorAll('.toggle').forEach(t => { t.style.display=''; t.style.visibility=''; t.style.opacity=''; t.style.position=''; t.style.left=''; });
    document.querySelectorAll('.clamp-wrap').forEach(w => w.setAttribute('data-expanded','false'));
    document.querySelectorAll('.section').forEach((s,i)=> i===0 ? s.classList.add('open') : s.classList.remove('open'));
  });

  // Attach transactionId generator to standard/custom questionnaire buttons
  const attachTxn = (id)=>{
    const el = document.getElementById(id);
    if(!el) return;
    el.addEventListener('click', (e)=>{
      e.preventDefault();
      const url = new URL(window.location.href);
      // Generate a pseudo-unique transactionId: timestamp + random + short hash of path
      const rand = Math.random().toString(36).slice(2, 10);
      const pathHash = Array.from(url.pathname).reduce((h,c)=>((h<<5)-h + c.charCodeAt(0))|0,0).toString(36).replace(/-/g,'x');
      const txn = `${Date.now()}-${rand}${pathHash.slice(0,4)}`;
      url.searchParams.set('transactionId', txn);
      window.location.assign(url.toString());
    });
  };
  attachTxn('btn-standard');
  attachTxn('btn-custom');

  fetchData().catch(console.error);
  window.addEventListener('pageshow', () => { fetchData().catch(console.error); });
  window.addEventListener('popstate', () => { fetchData().catch(console.error); });
}

async function fetchData(){
  const qs = new URLSearchParams(window.location.search);
  const buildingId = qs.get('buildingId');
  if(!buildingId) return;

  // UPDATED: only auto-generate transactionId when it's missing AND we are NOT in the (recordId + buildingId) path
  try {
    const url = new URL(window.location.href);
    const hasTxn = !!url.searchParams.get('transactionId');
    const hasRecord = !!(url.searchParams.get('recordId') || '').trim();
    const hasBuilding = !!(url.searchParams.get('buildingId') || '').trim();
    if (!hasTxn && !(hasRecord && hasBuilding)) {
      const generated = `${Date.now()}-${Math.random().toString(36).slice(2,10)}`;
      url.searchParams.set('transactionId', generated);
      window.history.replaceState({}, '', url.toString());
    }
  } catch {}

  const cached = sessionStorage.getItem(buildingId);
  let data;
  
  try {
    data = cached ? JSON.parse(cached) : await webhook(buildingId, qs.get('transactionId'), qs.get('recordId'));
  } catch (error) {
    console.warn('Webhook failed, using fallback data:', error.message);
    if (error.message.includes('429') || error.message.includes('Too Many Requests')) showRateLimitMessage();
    data = getFallbackData(buildingId);
  }
  
  const normalized = Array.isArray(data) ? (data[0] || {}) : data;
  sessionStorage.setItem(buildingId, JSON.stringify(normalized));
  render(normalized);
}

function showRateLimitMessage() {
  const messageEl = document.createElement('div');
  messageEl.className = 'rate-limit-message';
  messageEl.innerHTML = `
    <div class="message-content">
      <span>⚠️</span> 
      <strong>Rate Limited:</strong> The data service is temporarily busy. 
      Showing sample data. Please try again in a few minutes.
    </div>`;
  const titleEl = document.querySelector('.page-title');
  if (titleEl && titleEl.parentNode) titleEl.parentNode.insertBefore(messageEl, titleEl.nextSibling);
  setTimeout(() => { messageEl.parentNode && messageEl.parentNode.removeChild(messageEl); }, 10000);
}

function getFallbackData(buildingId) {
  return {
    fees: {
      sales: {
        'Sale building application fee': '500',
        'Sale move in fee': '250',
        'Sale move out fee': '150',
        'Sale move in deposit': '1000',
        'Sale move out deposit': '500'
      },
      leases: {
        'Lease building application fee': '75',
        'Lease move in fee': '200',
        'Lease move out fee': '100',
        'Lease move in deposit': '2000'
      },
      alterations: { 'Alteration sec deposit (%)': '10' }
    },
    feePolicies: { 'Flip Tax': '2% of sale price', 'Sublet Fee': '500', 'Capital Contribution': '1000' },
    buildingPolicies: {
      'LLCs allowed': 'Yes','Pied a terre': 'Yes','Trusts allowed': 'Yes','Gifting allowed?': 'Yes','Co-purchasing': 'Yes',
      'Fee simple': 'Yes','Right of First Refusal': 'Yes','Utilities included': 'Water, Sewage, Electric, Gas','HVAC': 'Central Air, Heat',
      'Sublet policy?': 'Sublets allowed with board approval and 500 fee',
      'Pet Policy': 'Dogs and cats allowed with board approval. Maximum 2 pets per unit. Breed restrictions apply. Pet deposit required.'
    }
  };
}

// --- Robust JSON extraction ---
function extractJsonFromRaw(raw){
  let txt = raw.replace(/^\)\]\}'\n?/, '').replace(/^[^\[{]*?(?=[\[{])/, '');
  try { return JSON.parse(txt); } catch {}
  const openIdx = txt.search(/[\[{]/);
  if(openIdx === -1) throw new Error('No JSON braces in response');
  const openCh = txt[openIdx]; const closeCh = openCh === '{' ? '}' : ']';
  let depth = 0, inStr = false, esc = false, endIdx = -1;
  for(let i=openIdx;i<txt.length;i++){
    const c = txt[i];
    if(inStr){ if(esc){ esc=false; continue; } if(c==='\\'){ esc=true; } else if(c==='"'){ inStr=false; } continue; }
    if(c==='"'){ inStr=true; continue; }
    if(c===openCh) depth++; else if(c===closeCh){ depth--; if(depth===0){ endIdx=i; break; } }
  }
  if(endIdx!==-1){
    const slice = txt.slice(openIdx, endIdx+1);
    try { return JSON.parse(slice); } catch {}
    const repaired = slice.replace(/,\s*(?=[}\]])/g,'');
    return JSON.parse(repaired);
  }
  throw new Error('Could not balance JSON braces');
}

async function webhook(buildingId, transactionId, recordId){
  try {
    const res = await fetch('https://hook.us1.make.com/uaahksz3fcajpj1eixp9unaxnkkumhr7',{
      method:'POST', headers:{ 'Content-Type':'application/json', 'Accept':'application/json, text/plain, */*' },
      body:JSON.stringify({ buildingId, transactionId, recordId })
    });
    const raw = await res.text();
    if (res.status === 429) throw new Error('429 Too Many Requests: Rate limit exceeded. Please try again later.');
    if (res.status === 202 || /^\s*Accepted\s*$/i.test(raw)) throw new Error('Backend returned 202 Accepted without JSON. The webhook needs to return data.');
    if (!raw.trim()) throw new Error('Webhook returned empty response');
    try { return extractJsonFromRaw(raw); }
    catch(e){ console.error('Failed to parse webhook response:', e, raw.slice(0,400)); throw new Error(`Webhook returned non-JSON response: ${e.message}`); }
  } catch (error) {
    if (error.name === 'TypeError' && error.message.includes('fetch')) throw new Error('Network error: Unable to reach the webhook service');
    throw error;
  }
}

/* ---------- config ---------- */
const MAX_DOC_LINKS = Infinity;
const byId = id => document.getElementById(id);
const fallback = '-';

/* helpers */
const meaningful = (v)=>{
  if (v == null) return false;
  if (Array.isArray(v)) return v.some(meaningful);
  if (typeof v === 'object') return Object.values(v).some(meaningful);
  const s = String(v).trim();
  if (!s) return false;
  return !['-','n/a','na','not applicable','none','null','undefined'].includes(s.toLowerCase());
};
const val = (obj,key)=>{ const raw = obj?.[key]; return meaningful(raw) ? (typeof raw === 'number' ? raw : String(raw).trim()) : fallback; };
const dollar = v => meaningful(v) ? `$${v}` : fallback;

const ESC_MAP = { '&':'&amp;', '<':'&lt;', '>':'&gt;', '"':'&quot;', "'":'&#39;' };
const esc = s => String(s).replace(/[&<>"']/g, ch => ESC_MAP[ch]);
const htmlize = s => esc(s).replace(/\n/g,'<br>');

const renderRow = (label, valueHtml)=> `<div class="data-row"><span class="label">${label}</span><div class="value">${valueHtml}</div></div>`;
const renderClamped = (text)=> {
  const content = htmlize(String(text));
    return `<div class="clamp-wrap" data-expanded="false"><div class="clamp-text">${content}</div><button class="toggle" type="button" aria-expanded="false" title="Expand">…</button></div>`;
  };
const renderRowIf = (label, raw)=>{ if(!meaningful(raw)) return ''; const text = Array.isArray(raw) ? raw.map(x=>String(x).trim()).filter(Boolean).join(', ') : String(raw); return renderRow(label, renderClamped(text)); };

const SPLIT_REGEX = new RegExp('[,;/|•&]+','g');
const splitTokens = (s)=> String(s).replace(/\band\b/gi, ',').split(SPLIT_REGEX).map(t=>t.trim()).filter(Boolean);
const toChipItems = (v) => {
  if (Array.isArray(v)){ return v.flatMap(x => { if (x == null) return []; if (typeof x === 'string') return splitTokens(x); if (typeof x === 'object' && 'name' in x) return [String(x.name).trim()]; return [String(x).trim()]; }); }
  if (v && typeof v === 'object'){ const guess = v.value || v.text || v.name || v.label; if (guess) return splitTokens(guess); }
  if (typeof v === 'string'){ const s = v.trim().replace(/^\[(.*)\]$/,'$1'); try { if (s.startsWith('[') && s.endsWith(']')) return JSON.parse(s).map(x=>String(x).trim()).filter(Boolean); } catch{} return splitTokens(s); }
  return [];
};
const renderChips = (items)=> items.length ? `<div class="pills">${items.map(t=>`<span class="pill">${t}</span>`).join('')}</div>` : '';
const isChipField = (label) => /(utilities\s*included|utilities|hvac)/i.test(String(label));

function extractJsonObjects(str){
  const out=[]; let depth=0, start=-1, inStr=false, esc=false;
  for(let i=0;i<str.length;i++){
    const ch=str[i];
    if(inStr){ if(esc){esc=false; continue;} if(ch==='\\'){esc=true; continue;} if(ch==='"'){inStr=false;} continue; }
    if(ch==='"'){ inStr=true; continue; }
    if(ch==='{'){ if(depth===0) start=i; depth++; }
    else if(ch==='}'){ depth--; if(depth===0 && start!==-1){ out.push(str.slice(start, i+1)); start=-1; } }
  }
  return out;
}
function normalizeAttachments(field){
  const out=[];
  const pushMaybe = att=>{ if(!att||!att.url) return; const url=String(att.url).replace(/\s/g,'%20'); if(!out.some(x=>x.url===url)) out.push({ url, filename: att.filename || 'Policy' }); };
  const fromString = s=>{
    const str=s.trim();
    if(str.startsWith('{') && str.endsWith('}')){ try{ pushMaybe(JSON.parse(str)); return; }catch{} }
    const blobs=extractJsonObjects(str);
    if(blobs.length){ blobs.forEach(b=>{ try{ pushMaybe(JSON.parse(b)); }catch{} }); return; }
    (str.match(/https?:\/\/[^\s"']+/g)||[]).forEach(u=>pushMaybe({url:u, filename:'Policy'}));
  };
  const fromEntry = e=>{ if(!e) return; if(Array.isArray(e)) e.forEach(fromEntry); else if(typeof e==='object') pushMaybe(e); else if(typeof e==='string') fromString(e); };
  fromEntry(field);
  return out;
}
const uniqueByUrl = arr => { const s=new Set(); return arr.filter(a => (a.url && !s.has(a.url)) ? (s.add(a.url), true) : false); };

/* ---------- render ---------- */
function render(data){
  const feesEl = byId('fees-section');
  const feePoliciesEl = byId('fee-policies-section');
  const buildingPoliciesEl = byId('building-policies-section');
  const appDocsEl = byId('application-documents-section');
  if(!feesEl || !feePoliciesEl || !buildingPoliciesEl) return;

  const fees = data.fees || {};
  const feePolicies = data.feePolicies || {};
  const buildingPolicies = data.buildingPolicies || {};

    const salesHtml = [
      renderRowIf('Application Fee', dollar(val(fees.sales||{}, 'Sale building application fee'))),
      renderRowIf('Move-in Fee', dollar(val(fees.sales||{}, 'Sale move in fee'))),
      renderRowIf('Move-out Fee', dollar(val(fees.sales||{}, 'Sale move out fee'))),
      renderRowIf('Move-in Deposit', dollar(val(fees.sales||{}, 'Sale move in deposit'))),
      renderRowIf('Move-out Deposit', dollar(val(fees.sales||{}, 'Sale move out deposit'))),
    ].join('');

    const leaseHtml = [
      renderRowIf('Application Fee', dollar(val(fees.leases||{}, 'Lease building application fee'))),
      renderRowIf('Move-in Fee', dollar(val(fees.leases||{}, 'Lease move in fee'))),
      renderRowIf('Move-out Fee', dollar(val(fees.leases||{}, 'Lease move out fee'))),
      renderRowIf('Move-in Deposit', dollar(val(fees.leases||{}, 'Lease move in deposit'))),
      renderRowIf('Move-out Deposit', dollar(val(fees.leases||{}, 'Lease move out deposit'))),
    ].join('');

  const altPct = val(fees.alterations||{}, 'Alteration sec deposit (%)');
  const altHtml = meaningful(altPct) ? renderRow('Alteration Security Deposit (%)', `${altPct}%`) : '';

  feesEl.innerHTML =
    `${salesHtml ? '<h4>Sales</h4>'+salesHtml : ''}${leaseHtml ? '<h4>Leases</h4>'+leaseHtml : ''}${altHtml ? '<h4>Alterations</h4>'+altHtml : ''}`
    || renderRow('Fees','No fee data');

  const feePolicyRows = [
    ['Flip Tax', val(feePolicies,'Flip Tax')],
    ['Sublet Fee', val(feePolicies,'Sublet Fee')],
    ['Capital Contribution', val(feePolicies,'Capital Contribution')],
  ].map(([label,value])=>renderRowIf(label, value)).join('');
  feePoliciesEl.innerHTML = feePolicyRows || renderRow('Fee Policies','No policy data');

  const rows=[];
  const preferredOrder = ['LLCs allowed','Pied a terre','Trusts allowed','Gifting allowed?','Co-purchasing','Fee simple','Right of First Refusal','Utilities included','HVAC','Sublet policy?','Pet Policy'];
  const keySet = new Set(Object.keys(buildingPolicies));
  const visited = new Set();

  const subletKey = Array.from(keySet).find(k => k.toLowerCase().startsWith('sublet policy'));

  const subletDocField = data.Documents?.['Sublet policy document'] ?? buildingPolicies['Sublet policy document'];
  const subletProofField = feePolicies['Proof for policies and fees'] ?? buildingPolicies['Proof for policies and fees'] ?? data.Documents?.['Proof for policies and fees'];
    const subletLinks = uniqueByUrl([...normalizeAttachments(subletDocField), ...normalizeAttachments(subletProofField)]).slice(0, MAX_DOC_LINKS);

  const renderOne = (k, v)=>{
    if (!meaningful(v)) return;
    if (isChipField(k)) {
      const items = toChipItems(v);
      if (items.length){ rows.push(renderRow(k, renderChips(items))); return; }
    }
    if (subletKey && k === subletKey && subletLinks.length){
        const icon = `\n<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url(#clip0_672_10332)\">\n<path d=\"M20 22H4C3.73478 22 3.48043 21.8946 3.29289 21.7071C3.10536 21.5196 3 21.2652 3 21V3C3 2.73478 3.10536 2.48043 3.29289 2.29289C3.48043 2.10536 3.73478 2 4 2H20C20.2652 2 20.5196 2.10536 20.7071 2.29289C20.8946 2.48043 21 2.73478 21 3V21C21 21.2652 20.8946 21.5196 20.7071 21.7071C20.5196 21.8946 20.2652 22 20 22ZM19 20V4H5V20H19ZM8 7H16V9H8V7ZM8 11H16V13H8V11ZM8 15H16V17H8V15Z\" fill=\"#2563EB\"/>\n</g>\n<defs>\n<clipPath id=\"clip0_672_10332\">\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\n</clipPath>\n</defs>\n</svg>`;
        const links = subletLinks.map((a,i)=>`<a class=\"file-link\" href=\"${a.url}\" target=\"_blank\" rel=\"noopener\">${icon} Policy ${i+1}</a>`).join('');
        rows.push(renderRow(k, `<div class=\"stack-links\">${links}</div>`));
      return;
    }
    const text = Array.isArray(v) ? v.map(x => String(x).trim()).filter(Boolean).join(', ') : String(v);
    rows.push(renderRow(k, renderClamped(text)));
  };

  preferredOrder.forEach(label => {
    const actualKey = (label.toLowerCase().startsWith('sublet policy')) ? (subletKey || label) : label;
    if (keySet.has(actualKey)){
      visited.add(actualKey);
      renderOne(actualKey, buildingPolicies[actualKey]);
    }
  });
  Array.from(keySet).forEach(k => { if (!visited.has(k)) renderOne(k, buildingPolicies[k]); });

  buildingPoliciesEl.innerHTML = rows.join('') || renderRow('Policies','No policy data');

  requestAnimationFrame(()=>{
    document.querySelectorAll('.clamp-wrap').forEach(wrap=>{
      const text = wrap.querySelector('.clamp-text');
      if (!text) return;
      text.style.display = 'block';
      const lineHeight = parseInt(window.getComputedStyle(text).lineHeight) || 20;
      const maxHeight = lineHeight * 3;
      const actualHeight = text.scrollHeight;
      const overflow = actualHeight > maxHeight + 1; // strictly more than 3 lines
      text.style.display = '-webkit-box';
      wrap.setAttribute('data-overflow', overflow ? 'true' : 'false');
      const t = wrap.querySelector('.toggle');
      if (t) t.style.display = overflow ? 'inline-block' : 'none';
    });
  });

  if (appDocsEl) {
    const portalUrl = 'https://transfers.joindaisy.com/';
    const qsParams = new URLSearchParams(window.location.search);
    const fromDataBuildingId = (data && (data.buildingId || data.BuildingId || data.id)) || '';
    const buildingIdParam = qsParams.get('buildingId') || fromDataBuildingId || '';
    const unitIdParam = qsParams.get('unitId') || qsParams.get('unit') || '';
    const recordIdParam = qsParams.get('recordId') || '';
    const transactionIdParam = qsParams.get('transactionId') || '';
    const withParams = (base, params) => {
      try { const url = new URL(base); Object.entries(params).forEach(([k, v]) => { if (v != null && String(v).trim() !== '') url.searchParams.set(k, String(v)); }); return url.toString(); }
      catch { const nonEmpty = Object.entries(params).filter(([,v]) => v != null && String(v).trim() !== ''); if (!nonEmpty.length) return base; const query = nonEmpty.map(([k,v]) => `${encodeURIComponent(k)}=${encodeURIComponent(String(v))}`).join('&'); return base + (base.includes('?') ? '&' : '?') + query; }
    };
    const portalWithParams = withParams(portalUrl, { buildingId: buildingIdParam, unitId: unitIdParam, transactionId: transactionIdParam });
    const salesFormUrl = withParams('https://transfers.joindaisy.com/sales-form', { recordId: recordIdParam, buildingId: buildingIdParam, transactionId: transactionIdParam });
    const alterationsEduUrl = withParams('https://transfers.joindaisy.com/alterations-education', { buildingId: buildingIdParam, recordId: recordIdParam });
    const salesPortalHref = recordIdParam ? salesFormUrl : withParams('https://transfers.joindaisy.com/sales', { buildingId: buildingIdParam, transactionId: transactionIdParam });
    const alterationsPlatformHref = recordIdParam ? alterationsEduUrl : withParams('https://transfers.joindaisy.com/alterations', { buildingId: buildingIdParam, transactionId: transactionIdParam });

    const raw = data.Documents?.['Sales/Alteration Documents'];
    const typeToDocs = { SALES_APPLICATION: [], ALTERATION_AGREEMENT: [] };

    const considerDoc = (doc)=>{
      if (!doc || !doc.type) return;
      const type = String(doc.type).toUpperCase();
      if (!(type in typeToDocs)) return;
      const url = doc.file?.signedPaths?.signedPath || doc.file?.signedPath || doc.file?.url;
      if (!url) return;
      const createdAt = Number(doc.createdAt) || 0;
      typeToDocs[type].push({ url, createdAt });
    };

    const parseEntry = (entry)=>{
      if (!entry) return;
      if (typeof entry === 'string') {
        try {
          const obj = JSON.parse(entry);
          if (Array.isArray(obj)) obj.forEach(considerDoc);
          else if (obj && Array.isArray(obj.documents)) obj.documents.forEach(considerDoc);
          else if (obj && obj.documentId) considerDoc(obj);
          else extractJsonObjects(entry).forEach(chunk => { try { considerDoc(JSON.parse(chunk)); } catch {} });
        } catch {
          extractJsonObjects(entry).forEach(chunk => { try { const obj = JSON.parse(chunk); if (obj && Array.isArray(obj.documents)) obj.documents.forEach(considerDoc); else considerDoc(obj); } catch {} });
        }
        return;
      }
      if (Array.isArray(entry)) { entry.forEach(parseEntry); return; }
      if (entry && typeof entry === 'object') { if (Array.isArray(entry.documents)) { entry.documents.forEach(considerDoc); return; } considerDoc(entry); }
    };

    parseEntry(raw);

    const latestOf = (type) => { const list = typeToDocs[type]; if (!list || !list.length) return null; list.sort((a,b)=> b.createdAt - a.createdAt); return list[0].url; };

    const salesAppUrl = latestOf('SALES_APPLICATION');
    const alterationUrl = latestOf('ALTERATION_AGREEMENT');

    const sections = [];
    const fileIcon = `\n<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url(#clip0_672_10332)\">\n<path d=\"M20 22H4C3.73478 22 3.48043 21.8946 3.29289 21.7071C3.10536 21.5196 3 21.2652 3 21V3C3 2.73478 3.10536 2.48043 3.29289 2.29289C3.48043 2.10536 3.73478 2 4 2H20C20.2652 2 20.5196 2.10536 20.7071 2.29289C20.8946 2.48043 21 2.73478 21 3V21C21 21.2652 20.8946 21.5196 20.7071 21.7071C20.5196 21.8946 20.2652 22 20 22ZM19 20V4H5V20H19ZM8 7H16V9H8V7ZM8 11H16V13H8V11ZM8 15H16V17H8V15Z\" fill=\"#2563EB\"/>\n</g>\n<defs>\n<clipPath id=\"clip0_672_10332\">\n<rect width=\"24\" height=\"24\" fill=\"white\"/>\n</clipPath>\n</defs>\n</svg>`;
    const fileLink = (url,label)=> url ? `<a class=\"file-link\" href=\"${url}\" target=\"_blank\" rel=\"noopener\">${fileIcon} ${label}</a>` : '-';
    const portalLink = (url,label)=> `<a class=\"file-link\" href=\"${url}\" target=\"_blank\" rel=\"noopener\">${fileIcon} ${label}</a>`;
    sections.push(`<h4>Sales</h4>` + renderRow('Sales Application', fileLink(salesAppUrl,'Download PDF')) + renderRow('Sales Portal', portalLink(salesPortalHref,'Access online')));
    sections.push(`<h4>Alterations</h4>` + renderRow('Alteration agreement', fileLink(alterationUrl,'Download PDF')) + renderRow('Alteration Platform', portalLink(alterationsPlatformHref,'Access online')));
    sections.push(`<h4>Leases</h4>` + renderRow('Daisy Transfers Portal', portalLink(portalWithParams,'Apply online')));
    appDocsEl.innerHTML = sections.join('');
  }
}
})();
</script>
