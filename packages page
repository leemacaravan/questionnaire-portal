<!-- Softr HTML Block — Pricing Plans (Daisy brand) -->
<div class="pricing-container">
    <div class="pricing-header">
      <h1 class="main-title">Choose the plan that fits your needs</h1>
      <p class="subtitle">Whether you're preparing for a sale or gathering due diligence, we make it easy.<br>Choose the level of information that fits your needs and timeline.</p>
            </div>
    
    <div class="pricing-grid">
      <!-- Basic Plan -->
      <div class="pricing-card">
        <div class="card-header">
          <h3 class="plan-name">Basic Information</h3>
          <p class="plan-description">Instant access to essential building data</p>
          <div class="price">
            <span class="price-amount">Free</span>
            <span class="price-period">Instant</span>
          </div>
            </div>
    
        <div class="card-features">
          <h4 class="features-title">What's included</h4>
          <ul class="features-list">
            <li>Building fees & policies</li>
            <li>Application documents</li>
            <li>Basic due diligence</li>
            <li>Instant delivery</li>
              </ul>
            </div>
    
                <div class="card-actions">
            <button class="btn btn-primary" onclick="redirectToBuildingInfo('basic')">Select</button>
            </div>
            </div>
    
      <!-- Standard Plan (Featured) -->
      <div class="pricing-card featured">
        <div class="featured-badge">Most Popular</div>
        <div class="card-header">
          <h3 class="plan-name">Standard Questionnaire</h3>
          <p class="plan-description">Comprehensive package for serious buyers</p>
          <div class="price">
            <span class="price-amount">$150</span>
            <span class="price-period">One-time instant</span>
          </div>
            </div>
    
        <div class="card-features">
          <h4 class="features-title">Everything in Basic, plus</h4>
          <ul class="features-list">
            <li>Unit-specific financial details</li>
            <li>Building finance position</li>
            <li>Building information & amenities</li>
            <li>Occupancy information</li>
            <li>Unit ownership details</li>
            <li>Limited clarification questions</li>
              </ul>
            </div>
    
                                 <div class="card-actions">
             <button class="btn btn-primary" onclick="redirectToStandardQuestionnaire('standard')">Select</button>
           </div>
            </div>
    
      <!-- Custom Plan -->
      <div class="pricing-card">
        <div class="card-header">
          <h3 class="plan-name">Custom Questionnaire</h3>
          <p class="plan-description">Premium service with expert consultation</p>
          <div class="price">
            <span class="price-amount">$450</span>
            <span class="price-period">3-5 business days</span>
          </div>
            </div>
    
        <div class="card-features">
          <h4 class="features-title">Everything in Standard, plus</h4>
          <ul class="features-list">
            <li>Unlimited custom questions</li>
            <li>Expert consultations</li>
            <li>Building & unit history</li>
            <li>Direct management contact</li>
            <li>Custom report format</li>
            <li>Priority support</li>
              </ul>
            </div>
    
                              <div class="card-actions">
              <button class="btn btn-primary" onclick="redirectToQuestionnaireForm('custom')">Select</button>
        </div>
      </div>
    </div>
  
    <div class="pricing-footer">
      <p class="footer-note">*Expedited timing depends on building and third-party response times.</p>
      </div>
    </div>
    
    <style>
    /* Daisy-inspired design system */
    :root {
      --daisy-primary: #006956;
      --daisy-primary-light: #4C9D8D;
      --daisy-primary-dark: #08494B;
      --daisy-accent: #4255FF;
      --daisy-accent-light: #EEF0FF;
      --daisy-accent-dark: #1F2870;
      --daisy-mint: #D3FFF3;
      --daisy-off-white: #FFFDF4;
      
      --text-primary: #1A1A1A;
      --text-secondary: #6B7280;
      --text-muted: #9CA3AF;
      
      --border-light: #E5E7EB;
      --border-medium: #D1D5DB;
      
      --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
      --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
      --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
      --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
    }
  
    .pricing-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 1rem 2rem;
      background: white;
      min-height: 100vh;
    }
  
    .pricing-header {
      text-align: center;
      margin-bottom: 1.5rem;
    }
  
    .main-title {
      font-family: "Reckless", serif;
      font-size: 2.5rem;
      font-weight: 600;
      color: var(--text-primary);
      margin-bottom: 0.75rem;
      line-height: 1.2;
    }
  
    .subtitle {
      font-family: "Basis Grotesk", Inter, system-ui, -apple-system, sans-serif;
      font-size: 0.875rem;
      color: var(--text-secondary);
      max-width: 600px;
      margin: 0 auto;
      line-height: 1.3;
    }
  
    .pricing-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 1.5rem;
      margin-bottom: 1.5rem;
    }
  
    .pricing-card {
      background: white;
      border-radius: 24px;
      padding: 1.5rem;
      border: 2px solid var(--border-light);
      position: relative;
      transition: all 0.3s ease;
      box-shadow: var(--shadow-md);
      display: flex;
      flex-direction: column;
    }
  
    .pricing-card:hover {
      transform: translateY(-4px);
      box-shadow: var(--shadow-xl);
      border-color: var(--daisy-primary-light);
    }
  
    .pricing-card.featured {
      border-color: var(--daisy-primary);
      background: white;
      box-shadow: var(--shadow-lg), 0 0 0 2px var(--daisy-primary);
    }
  
    .featured-badge {
      position: absolute;
      top: -12px;
      left: 50%;
      transform: translateX(-50%);
      background: var(--daisy-primary);
      color: white;
      padding: 0.5rem 1.5rem;
      border-radius: 50px;
      font-family: "Basis Grotesk", Inter, system-ui, -apple-system, sans-serif;
      font-size: 0.875rem;
      font-weight: 600;
      letter-spacing: 0.025em;
    }
  
    .card-header {
      text-align: center;
      margin-bottom: 1rem;
    }
  
    .plan-name {
      font-family: "Basis Grotesk", Inter, system-ui, -apple-system, sans-serif;
      font-size: 1.25rem;
      font-weight: 700;
      color: var(--text-primary);
      margin-bottom: 0.375rem;
    }
  
    .plan-description {
      font-family: "Basis Grotesk", Inter, system-ui, -apple-system, sans-serif;
      font-size: 0.875rem;
      color: var(--text-secondary);
      margin-bottom: 1rem;
      line-height: 1.4;
    }
  
    .price {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.25rem;
    }
  
    .price-amount {
      font-family: "Basis Grotesk", Inter, system-ui, -apple-system, sans-serif;
      font-size: 2.25rem;
      font-weight: 800;
      color: var(--text-primary);
      line-height: 1;
    }
  
    .price-period {
      font-family: "Basis Grotesk", Inter, system-ui, -apple-system, sans-serif;
      font-size: 0.75rem;
      color: var(--text-muted);
      font-weight: 500;
    }
  
    .card-features {
      margin-bottom: 1rem;
    }
  
    .features-title {
      font-family: "Basis Grotesk", Inter, system-ui, -apple-system, sans-serif;
      font-size: 0.75rem;
      font-weight: 600;
      color: var(--text-secondary);
      text-transform: uppercase;
      letter-spacing: 0.05em;
      margin-bottom: 0.75rem;
    }
  
    .features-list {
      list-style: none;
      padding: 0;
      margin: 0;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }
  
    .features-list li {
      font-family: "Basis Grotesk", Inter, system-ui, -apple-system, sans-serif;
      font-size: 0.8rem;
      color: var(--text-primary);
      display: flex;
      align-items: center;
      gap: 0.5rem;
      line-height: 1.4;
    }
  
    .features-list li::before {
      content: "✓";
      display: flex;
      align-items: center;
      justify-content: center;
      width: 16px;
      height: 16px;
      background: var(--daisy-primary);
      color: white;
      border-radius: 50%;
      font-size: 0.625rem;
      font-weight: 600;
      flex-shrink: 0;
    }
  
    .card-actions {
      text-align: center;
      margin-top: auto;
    }
  
    .btn {
      font-family: "Basis Grotesk", Inter, system-ui, -apple-system, sans-serif;
      font-size: 0.875rem;
      font-weight: 600;
      padding: 0.75rem 1.5rem;
      border-radius: 12px;
      border: none;
      cursor: pointer;
      transition: all 0.2s ease;
      text-decoration: none;
      display: inline-block;
      min-width: 160px;
    }
  
    .btn-primary {
      background: var(--daisy-primary);
      color: white;
      box-shadow: var(--shadow-md);
      border: none;
    }
  
    .btn-primary:hover {
      background: var(--daisy-primary-dark);
      transform: translateY(-2px);
      box-shadow: var(--shadow-lg);
    }
  
    .pricing-footer {
      text-align: center;
    }
  
    .footer-note {
      font-family: "Basis Grotesk", Inter, system-ui, -apple-system, sans-serif;
      font-size: 0.75rem;
      color: var(--text-muted);
      font-style: italic;
    }
  
    /* Responsive adjustments */
    @media (max-width: 768px) {
      .pricing-container {
        padding: 2rem 1rem;
      }
      
      .main-title {
        font-size: 2.5rem;
      }
      
      .pricing-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
      }
      
      .pricing-card {
        padding: 2rem;
      }
      
      .btn {
        min-width: 100%;
      }
    }
  
    @media (max-width: 480px) {
      .main-title {
        font-size: 2rem;
      }
      
            .pricing-card {
          padding: 1.5rem;
        }
      }
    </style>
    
    <script>
      function redirectToBuildingInfo(planType) {
        // Get URL parameters
        const urlParams = new URLSearchParams(window.location.search);
        const buildingId = urlParams.get('buildingId') || '';
        const recordId = urlParams.get('recordId') || '';
        
        // Base URL for building info page
        const baseUrl = 'https://transfers.joindaisy.com/building-info';
        
        // Build query parameters
        const params = new URLSearchParams();
        if (buildingId) params.append('buildingId', buildingId);
        if (recordId) params.append('recordId', recordId);
        
        // Construct final URL
        const finalUrl = params.toString() ? `${baseUrl}?${params.toString()}` : baseUrl;
        
        // Redirect to the building info page
        window.location.href = finalUrl;
      }
  
             function redirectToQuestionnaireForm(planType) {
         // Get URL parameters
         const urlParams = new URLSearchParams(window.location.search);
         const buildingId = urlParams.get('buildingId') || '';
         const recordId = urlParams.get('recordId') || '';
         
         // Base URL for questionnaire form
         const baseUrl = 'https://transfers.joindaisy.com/questionnaire-form';
         
         // Build query parameters
         const params = new URLSearchParams();
         if (buildingId) params.append('buildingId', buildingId);
         if (recordId) params.append('buildingId', buildingId);
         
         // Construct final URL
         const finalUrl = params.toString() ? `${baseUrl}?${params.toString()}` : baseUrl;
         
         // Redirect to the questionnaire form
         window.location.href = finalUrl;
       }

       function getRecordIdFromURL() {
         const params = new URLSearchParams(window.location.search);
         return params.get('recordId');
       }

       function generateUniqueId() {
         return `${Date.now()}-${Math.random().toString(36).substring(2, 15)}`;
       }

       function redirectToStandardQuestionnaire(planType) {
         // Get URL parameters
         const urlParams = new URLSearchParams(window.location.search);
         const buildingId = urlParams.get('buildingId') || '';
         const recordId = urlParams.get('recordId') || '';
         
         // Generate a unique transaction ID
         const transactionId = generateUniqueId();
         
         // Base URL for building info page
         const baseUrl = 'https://transfers.joindaisy.com/building-info';
         
         // Build query parameters
         const params = new URLSearchParams();
         if (buildingId) params.append('buildingId', buildingId);
         if (recordId) params.append('recordId', recordId);
         params.append('transactionId', transactionId);
         
         // Construct final URL
         const finalUrl = params.toString() ? `${baseUrl}?${params.toString()}` : baseUrl;
         
         // Redirect to the building info page with transaction ID
         window.location.href = finalUrl;
       }
    </script>
    
